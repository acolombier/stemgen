# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: Build

on:
  push:
  pull_request:

permissions:
  contents: read #  to fetch code (actions/checkout)

env:
  REGISTRY_IMAGE: aclmb/stemgen

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        tag:
          - ""
          - cuda
          - cuda11
          - rocm
    steps:
      - name: Prepare
        env:
          TAG: ${{ matrix.tag }}
        run: |
          platform=${{ matrix.platform }}
          if [ "$TAG" = "cuda" ]; then
            echo "PYTORCH_PIP_SERVER=https://download.pytorch.org/whl/cu124" >> $GITHUB_ENV
          elif [ "$TAG" = "cuda11" ]; then
            echo "PYTORCH_PIP_SERVER=https://download.pytorch.org/whl/cu118" >> $GITHUB_ENV
          elif [ "$TAG" = "rocm" ]; then
            echo "PYTORCH_PIP_SERVER=https://download.pytorch.org/whl/rocm" >> $GITHUB_ENV
          else
            echo "PYTORCH_PIP_SERVER=https://download.pytorch.org/whl/cpu" >> $GITHUB_ENV
          fi
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' && github.repository == 'acolombier/stemgen'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PYTORCH_PIP_SERVER=${{ env.PYTORCH_PIP_SERVER }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' && github.repository == 'acolombier/stemgen' }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.tag }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    if: github.event_name != 'pull_request' && github.repository == 'acolombier/stemgen'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag:
          - ""
          - cuda
          - cuda11
          - rocm
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.tag }}-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
            latest=auto
            suffix=${{ matrix.tag == '' && '' || format('-{0}', matrix.tag) }},onlatest=true
          tags: |
            type=ref,event=branch,suffix=${{ matrix.tag == '' && '' || format('-{0}', matrix.tag) }}
            type=ref,event=tag,suffix=${{ matrix.tag == '' && '' || format('-{0}', matrix.tag) }}
            type=ref,event=pr,suffix=${{ matrix.tag == '' && '' || format('-{0}', matrix.tag) }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image and check version
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
          docker run -i --rm ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }} --version
